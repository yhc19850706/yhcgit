<?xml version='1.0' encoding='UTF-8'?>
<beans
    xmlns='http://www.springframework.org/schema/beans'
    xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'
    xmlns:context='http://www.springframework.org/schema/context'
    xmlns:c='http://www.springframework.org/schema/c'
    xmlns:p='http://www.springframework.org/schema/p'
    xmlns:cache='http://www.springframework.org/schema/cache'
    xsi:schemaLocation='http://www.springframework.org/schema/beans 
                        http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context.xsd
                        http://www.springframework.org/schema/cache
                        http://www.springframework.org/schema/cache/spring-cache.xsd'>
    
    <!-- 对象池配置： -->
	<bean id="jedisPoolConfig"
		class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxIdle" value="${redis.maxIdle}" />
		<property name="maxWaitMillis" value="${redis.maxWait}" />
		<property name="testOnBorrow" value="${redis.testOnBorrow}"/>
	</bean>
    <!-- Jedis ConnectionFactory 工厂实现-->
    <!--  <bean
        id='jedisConnectionFactory'
        class='org.springframework.data.redis.connection.jedis.JedisConnectionFactory'
        p:host-name='${redis.host-name}'
        p:port='${redis.port}'
        p:use-pool='true'
        p:poolConfig="jedisPoolConfig"/> <property
			name="password"
			value="${redis.password}" />-->
   
    <bean id="jedisConnectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="poolConfig" ref="jedisPoolConfig"/>
		<property name="hostName" value="${redis.host}"/>
		<property name="port" value="${redis.port}"/>
		<property name="timeout" value="${redis.timeout}" />
	</bean>
    <!-- redis template definition -->
    <bean id='redisTemplate' class='org.springframework.data.redis.core.RedisTemplate'>
          <property name="connectionFactory" ref="jedisConnectionFactory" /> 
          <property name="keySerializer" > 
              <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" /> 
          </property> 
          <property name="valueSerializer" > 
              <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" /> 
          </property> 
    </bean>

    <!-- declare Redis Cache Manager
    <bean
        id='cacheManager'
        class='org.springframework.data.redis.cache.RedisCacheManager'
        c:template-ref='redisTemplate'/>
      -->
     <!-- cache配置 --> 
    <bean id="methodCacheInterceptor" class="com.yhc.common.interceptor.MethodCacheInterceptor" > 
          <property name="redisUtil" ref="redisUtil" /> 
    </bean > 
    <bean id="redisUtil" class="com.yhc.common.redis.RedisUtil" > 
          <property name="redisTemplate" ref="redisTemplate" /> 
    </bean >
    
    <!-- 需要加入缓存的类或方法 
     <bean id="methodCachePointCut"  class="org.springframework.aop.support.RegexpMethodPointcutAdvisor" > 
      <property name="advice" ref="methodCacheInterceptor"> 
           
      </property> 
      <property name="patterns" > 
          <list> 
             确定正则表达式列表 
             <value>com\.yhc\.web\.security\.*</value > 
          </list> 
      </property> 
    </bean >  -->  
</beans>
