<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"  
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"  
    xmlns:aop="http://www.springframework.org/schema/aop"  
    xsi:schemaLocation="  
            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd  
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
    
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="300 " />
        <property name="maxIdle" value="8" />
        <property name="maxWaitMillis" value="1000 " />
        <property name="testOnBorrow" value="true"/>
        <property name="testOnReturn" value="true"/>
        <!-- <property name="testWhileIdle" value="true"/> -->
    </bean>

    <bean id="shardedJedisPool" class="redis.clients.jedis.ShardedJedisPool"  scope="singleton">
        <constructor-arg index="0" ref="jedisPoolConfig" />
        <constructor-arg index="1">
            <list>
                <bean class="redis.clients.jedis.JedisShardInfo">
                    <constructor-arg name="host" value="192.168.35.156" />
                    <constructor-arg name="port" value="6379 " />
                    <constructor-arg name="timeout" value="100000 " />
                </bean>
            </list>
        </constructor-arg>
    </bean>
    

    <!-- declare Redis Cache Manager
    <bean
        id='cacheManager'
        class='org.springframework.data.redis.cache.RedisCacheManager'
        c:template-ref='redisTemplate'/>
      -->
     <!-- cache配置  
    <bean id="methodCacheInterceptor" class="com.yhc.common.interceptor.MethodCacheInterceptor" > 
          <property name="redisUtil" ref="redisUtil" /> 
    </bean > 
    <bean id="redisUtil" class="com.yhc.common.redis.RedisUtil" > 
          <property name="redisTemplate" ref="redisTemplate" /> 
    </bean >
    -->
    <!-- 需要加入缓存的类或方法 
     <bean id="methodCachePointCut"  class="org.springframework.aop.support.RegexpMethodPointcutAdvisor" > 
      <property name="advice" ref="methodCacheInterceptor"> 
           
      </property> 
      <property name="patterns" > 
          <list> 
             确定正则表达式列表 
             <value>com\.yhc\.web\.security\.*</value > 
          </list> 
      </property> 
    </bean >  -->  
</beans>
